(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[863],{5047:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/profiles/[address]/items/[id]",function(){return n(3968)}])},3968:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return U}});var r=n(5893),o=n(387),i=n(6681),s=n(828),a=n(484),l=n(9656),c=n(9872),u=n(1138),d=n(2497),f=n(7568),m=n(4051),g=n.n(m),p=n(1667),y=n(7294),h=n(7496),v=n(3507),b=n(4358),x=n(8100),I=n(5917);var N=n(5697),T=n.n(N),F=n(2113),k=n(2596);function S(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};e||(e="undefined"!==typeof t?b.Hb.apiListing(t):null);var r=(0,x.ZP)(e,F.Z,n),o=r.data,i=r.error,s=Array.isArray(o)&&o.length>0?(0,k.vW)(o[0]):void 0;return{listing:s,error:i,isLoading:!o&&!i}}function w(){return(0,r.jsxs)("div",{className:"mt-2 text-sm text-center text-gray-600",children:[l.Z.chainEnv===b.Jy?(0,r.jsx)("div",{children:"Insufficient funds, add some FLOW from the dev wallet account page"}):(0,r.jsx)("a",{href:"https://testnet-faucet.onflow.org/fund-account",className:"mx-1 font-bold underline hover:opacity-80",rel:"noreferrer",target:"_blank",children:"Get some FLOW"}),"to purchase this Kitty Item."]})}S.propTypes={id:T().string};var C=n(1381);function j(t){var e=t.item,n=(0,o.useRouter)().query,i=n.address,c=n.id,m=(0,u.Z)().currentUser,N=(0,d.Z)(null===m||void 0===m?void 0:m.addr).data,T=(0,s.Z)(function(t){var e,n=(0,o.useRouter)(),r=(0,u.Z)().currentUser,i=(0,h.Z)(),s=i.addTransaction,a=i.transactionsById,l=(0,x.kY)(),c=l.mutate,d=l.cache,m=(0,y.useState)(),N=m[0],T=m[1],F=null===(e=a[N])||void 0===e?void 0:e.data,k=function(){var e=(0,f.Z)(g().mark((function e(n,r,o){var i;return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n){e.next=2;break}throw new Error("Missing listingResourceID");case 2:if(o){e.next=4;break}throw new Error("Missing ownerAddress");case 4:return e.next=6,p.JG({cadence:'import FungibleToken from 0xFungibleToken\nimport NonFungibleToken from 0xNonFungibleToken\nimport FlowToken from 0xFlowToken\nimport KittyItems from 0xKittyItems\nimport NFTStorefrontV2 from 0xNFTStorefront\n\npub fun getOrCreateCollection(account: AuthAccount): &KittyItems.Collection{NonFungibleToken.Receiver} {\n  if let collectionRef = account.borrow<&KittyItems.Collection>(from: KittyItems.CollectionStoragePath) {\n    return collectionRef\n  }\n\n  // create a new empty collection\n  let collection <- KittyItems.createEmptyCollection() as! @KittyItems.Collection\n\n  let collectionRef = &collection as &KittyItems.Collection\n  \n  // save it to the account\n  account.save(<-collection, to: KittyItems.CollectionStoragePath)\n\n  // create a public capability for the collection\n  account.link<&KittyItems.Collection{NonFungibleToken.CollectionPublic, KittyItems.KittyItemsCollectionPublic}>(KittyItems.CollectionPublicPath, target: KittyItems.CollectionStoragePath)\n\n  return collectionRef\n}\n\ntransaction(listingResourceID: UInt64, storefrontAddress: Address) {\n  let paymentVault: @FungibleToken.Vault\n  let kittyItemsCollection: &KittyItems.Collection{NonFungibleToken.Receiver}\n  let storefront: &NFTStorefrontV2.Storefront{NFTStorefrontV2.StorefrontPublic}\n  let listing: &NFTStorefrontV2.Listing{NFTStorefrontV2.ListingPublic}\n\n  prepare(account: AuthAccount) {\n    // Access the storefront public resource of the seller to purchase the listing.\n    self.storefront = getAccount(storefrontAddress)\n      .getCapability<&NFTStorefrontV2.Storefront{NFTStorefrontV2.StorefrontPublic}>(\n          NFTStorefrontV2.StorefrontPublicPath\n      )!\n      .borrow()\n      ?? panic("Could not borrow Storefront from provided address")\n\n    // Borrow the listing\n    self.listing = self.storefront.borrowListing(listingResourceID: listingResourceID) ?? panic("No Offer with that ID in Storefront")\n    let price = self.listing.getDetails().salePrice\n\n    // Access the vault of the buyer to pay the sale price of the listing.\n    let mainFlowVault = account.borrow<&FlowToken.Vault>(from: /storage/flowTokenVault) ?? panic("Cannot borrow FlowToken vault from account storage")\n    self.paymentVault <- mainFlowVault.withdraw(amount: price)\n    \n    self.kittyItemsCollection = getOrCreateCollection(account: account)\n  }\n\n  execute {\n    let item <- self.listing.purchase(\n      payment: <-self.paymentVault,\n      commissionRecipient: nil\n    )\n\n    self.kittyItemsCollection.deposit(token: <-item)\n    self.storefront.cleanupPurchasedListings(listingResourceID: listingResourceID)\n  }\n}\n',args:function(t,e){return[t(n.toString(),e.UInt64),t(o,e.Address)]},limit:1e3});case 6:i=e.sent,T(i),s({id:i,title:"Purchase ".concat(r," #").concat(t)});case 9:case"end":return e.stop()}}),e)})));return function(t,n,r){return e.apply(this,arguments)}}();return(0,y.useEffect)((function(){r&&(0,v.rc)(F)?(I.Z.track("kitty-items-item-sale-primary",{params:{itemID:t}}),c(r.addr),d.delete(b.Hb.apiListing(t)),n.push(b.Hb.profileItem(r.addr,t))):(0,v.Fd)(F)&&T(null)}),[d,r,t,c,n,F]),[k,F]}(c),2),F=T[0],k=T[1],j=(0,s.Z)(function(t){var e,n=(0,h.Z)(),r=n.addTransaction,o=n.transactionsById,i=(0,y.useState)(),s=i[0],a=i[1],l=null===(e=o[s])||void 0===e?void 0:e.data,c=S(t,(function(){return(0,v.rc)(l)?b.Hb.apiListing(t):null}),{refreshInterval:1e3}).listing,u=function(){var e=(0,f.Z)(g().mark((function e(n){var o,i,s,l;return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(o=n.listingResourceID,i=n.owner,s=n.name,o){e.next=3;break}throw new Error("Missing listingResourceID");case 3:return e.next=5,p.JG({cadence:'import NFTStorefrontV2 from 0xNFTStorefront\n\ntransaction(listingResourceID: UInt64) {\n  let storefront: &NFTStorefrontV2.Storefront{NFTStorefrontV2.StorefrontManager}\n\n  prepare(acct: AuthAccount) {\n    self.storefront = acct.borrow<&NFTStorefrontV2.Storefront{NFTStorefrontV2.StorefrontManager}>(from: NFTStorefrontV2.StorefrontStoragePath)\n      ?? panic("Missing or mis-typed NFTStorefrontV2.Storefront")\n  }\n\n  execute {\n    self.storefront.removeListing(listingResourceID: listingResourceID)\n  }\n}',args:function(t,e){return[t(o.toString(),e.UInt64)]},limit:1e3});case 5:l=e.sent,a(l),r({id:l,url:b.Hb.profileItem(i,t),title:"Remove ".concat(s," #").concat(t)});case 8:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}();return(0,y.useEffect)((function(){c||a(null)}),[c]),[u,l]}(c),2),P=j[0],R=j[1],V=Number.isInteger(e.listingResourceID),K=!!m&&e.owner===(null===m||void 0===m?void 0:m.addr),D=V&&!K,Z=K&&V,A=V&&parseFloat(e.price)<=parseFloat(N);if(D)return(0,r.jsxs)("div",{children:[k?(0,r.jsx)(C.Z,{status:k.status}):(0,r.jsx)(a.C,{onClick:function(){return F(e.listingResourceID,e.name,i)},disabled:!!m&&!A,roundedFull:!0,children:"Purchase"}),!!m&&!A&&(0,r.jsx)(w,{})]});if(Z){var E=e.owner===l.Z.flowAddress?"Store":"Marketplace";return(0,r.jsx)("div",{children:R?(0,r.jsx)(C.Z,{status:R.status}):(0,r.jsx)(a.C,{onClick:function(){return P(e)},color:"gray",roundedFull:!0,children:"Remove From ".concat(E)})})}return null}j.propTypes={item:c.d};var P=n(9018),R=n(4571),V=n(5143),K=n(8848),D=n(3877);n(4115);var Z=n(4049);function A(t){var e=t.item,n=(0,s.Z)(function(t){var e,n=(0,h.Z)(),r=n.addTransaction,o=n.transactionsById,i=(0,y.useState)(),s=i[0],a=i[1],l=null===(e=o[s])||void 0===e?void 0:e.data,c=S(t,(function(){return(0,v.rc)(l)?(I.Z.track("kitty-items-item-listed",{params:{itemID:t}}),b.Hb.apiListing(t)):null}),{refreshInterval:1e3}).listing,u=function(){var t=(0,f.Z)(g().mark((function t(e,n){var o;return g().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e){t.next=2;break}throw new Error("Missing item");case 2:if(n){t.next=4;break}throw new Error("Missing price");case 4:return t.next=6,p.JG({cadence:'import FungibleToken from 0xFungibleToken\nimport NonFungibleToken from 0xNonFungibleToken\nimport FlowToken from 0xFlowToken\nimport KittyItems from 0xKittyItems\nimport NFTStorefrontV2 from 0xNFTStorefront\n\npub fun getOrCreateStorefront(account: AuthAccount): &NFTStorefrontV2.Storefront {\n  if let storefrontRef = account.borrow<&NFTStorefrontV2.Storefront>(from: NFTStorefrontV2.StorefrontStoragePath) {\n    return storefrontRef\n  }\n\n  let storefront <- NFTStorefrontV2.createStorefront()\n\n  let storefrontRef = &storefront as &NFTStorefrontV2.Storefront\n\n  account.save(<-storefront, to: NFTStorefrontV2.StorefrontStoragePath)\n\n  account.link<&NFTStorefrontV2.Storefront{NFTStorefrontV2.StorefrontPublic}>(NFTStorefrontV2.StorefrontPublicPath, target: NFTStorefrontV2.StorefrontStoragePath)\n\n  return storefrontRef\n}\n\ntransaction(saleItemID: UInt64, saleItemPrice: UFix64) {\n\n  let flowReceiver: Capability<&FlowToken.Vault{FungibleToken.Receiver}>\n  let kittyItemsProvider: Capability<&KittyItems.Collection{NonFungibleToken.Provider, NonFungibleToken.CollectionPublic}>\n  let storefront: &NFTStorefrontV2.Storefront\n\n  prepare(account: AuthAccount) {\n    // We need a provider capability, but one is not provided by default so we create one if needed.\n    let kittyItemsCollectionProviderPrivatePath = /private/kittyItemsCollectionProviderV14\n\n    self.flowReceiver = account.getCapability<&FlowToken.Vault{FungibleToken.Receiver}>(/public/flowTokenReceiver)!\n\n    assert(self.flowReceiver.borrow() != nil, message: "Missing or mis-typed FLOW receiver")\n\n    if !account.getCapability<&KittyItems.Collection{NonFungibleToken.Provider, NonFungibleToken.CollectionPublic}>(kittyItemsCollectionProviderPrivatePath)!.check() {\n      account.link<&KittyItems.Collection{NonFungibleToken.Provider, NonFungibleToken.CollectionPublic}>(kittyItemsCollectionProviderPrivatePath, target: KittyItems.CollectionStoragePath)\n    }\n\n    self.kittyItemsProvider = account.getCapability<&KittyItems.Collection{NonFungibleToken.Provider, NonFungibleToken.CollectionPublic}>(kittyItemsCollectionProviderPrivatePath)!\n\n    assert(self.kittyItemsProvider.borrow() != nil, message: "Missing or mis-typed KittyItems.Collection provider")\n\n    self.storefront = getOrCreateStorefront(account: account)\n  }\n\n  execute {\n    let saleCut = NFTStorefrontV2.SaleCut(\n      receiver: self.flowReceiver,\n      amount: saleItemPrice\n    )\n\n    self.storefront.createListing(\n      nftProviderCapability: self.kittyItemsProvider,\n      nftType: Type<@KittyItems.NFT>(),\n      nftID: saleItemID,\n      salePaymentVaultType: Type<@FlowToken.Vault>(),\n      saleCuts: [saleCut],\n      marketplacesCapability: nil, // [Capability<&{FungibleToken.Receiver}>]?\n      customID: nil, // String?\n      commissionAmount: UFix64(0),\n      expiry: UInt64(getCurrentBlock().timestamp) + UInt64(500)\n    )\n  }\n}',args:function(t,r){return[t(e.itemID.toString(),r.UInt64),t((0,D.s)(n),r.UFix64)]},limit:1e3});case 6:o=t.sent,r({id:o,url:b.Hb.profileItem(e.owner,e.itemID),title:"List ".concat(e.name," #").concat(e.itemID)}),a(o);case 9:case"end":return t.stop()}}),t)})));return function(e,n){return t.apply(this,arguments)}}();return(0,y.useEffect)((function(){c&&a(null)}),[c]),[u,l]}(e.itemID),2),o=n[0],i=n[1],l=(0,y.useState)(""),c=l[0],u=l[1];return(0,r.jsxs)("div",{"data-cy":"sell-list-item",children:[(0,r.jsxs)("div",{className:"text-gray mb-5",children:[(0,r.jsxs)("div",{className:"font-bold",children:["Items of this rarity usually sell for"," ",(0,D.K)(b.n_[e.rarity].toString())," ","FLOW."]}),"Please specify the price you want to sell your Kitty Item for."]}),i?(0,r.jsx)(C.Z,{status:i.status}):(0,r.jsx)("div",{className:"bg-white border border-gray-200 rounded px-8 pt-5 pb-7",children:(0,r.jsxs)("form",{onSubmit:function(t){t.preventDefault(),o(e,c)},children:[(0,r.jsx)(Z.Z,{value:c,onChange:u,type:"number",min:"0",required:!0,placeholder:"0.00",label:"Price",inputClassName:"text-right pr-4",step:"any"}),(0,r.jsx)(a.C,{type:"submit",disabled:!c,roundedFull:!0,className:"mt-5",children:"List My Kitty Kitem"})]})})]})}A.propTypes={item:c.d};var E=n(1599);function L(t){var e="Unable to find Kitty Item: #".concat(t.itemID," for account ").concat(t.accountID);return(0,r.jsx)("div",{className:"flex justify-center my-12 text-center",children:(0,r.jsx)("div",{className:"bg-white border border-gray-200 p-6 w-[32rem] rounded-md inline-flex flex-col justify-center",children:(0,r.jsxs)("div",{className:"bg-white border border-gray-200 p-6 rounded-md inline-flex flex-col justify-center",children:[(0,r.jsx)("b",{children:e}),(0,r.jsx)("p",{className:"text-gray-light mt-1",children:"The Kitty Item you are looking for may be owned by a different account or not yet minted!"}),(0,r.jsx)("hr",{className:"mt-8 mb-6"}),(0,r.jsx)("b",{children:"Learn more about Kitty Items"}),(0,r.jsx)("p",{className:"text-gray-light mb-5 mt-1 max-w-xs mx-auto",children:"Learn more about the key components and services that make Kitty Items possible."}),(0,r.jsx)(a.Z,{href:b.Hb.githubRepo,target:"_blank",color:"outline",children:"VIEW DOCUMENTATION & RESOURCES"})]})})})}function U(){var t=(0,o.useRouter)(),e=(0,u.Z)().currentUser,n=t.query,s=n.address,a=n.id,l=S(a).listing,c=(0,E.ZP)(s,a,l).item,d=e&&(null===c||void 0===c?void 0:c.owner)&&c.owner===(null===e||void 0===e?void 0:e.addr)&&!l;return(0,r.jsxs)("div",{className:"main-container pt-12 pb-24 w-full",children:[(0,r.jsx)(V.Z,{children:["Kitty Item",a].filter(Boolean).join(" ")}),(0,r.jsx)("main",{children:c?(0,r.jsxs)("div",{className:"grid grid-cols-1 lg:grid-cols-2 md:gap-x-14",children:[(0,r.jsx)(i.Z,{name:null===c||void 0===c?void 0:c.name,rarity:null===c||void 0===c?void 0:c.rarity,cid:null===c||void 0===c?void 0:c.image,address:null===c||void 0===c?void 0:c.owner,id:null===c||void 0===c?void 0:c.itemID,size:"lg"}),(0,r.jsxs)("div",{className:"pt-20",children:[(0,r.jsx)(R.Z,{address:c.owner,size:"lg"}),(0,r.jsx)("h1",{className:"text-5xl text-gray-darkest mt-10 mb-6","data-cy":"minted-item-name",children:c.name}),d?(0,r.jsx)(A,{item:c}):(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)("div",{className:"flex items-center h-6",children:[!!l&&(0,r.jsx)("div",{className:"mr-5",children:(0,r.jsx)(P.Z,{price:l.price})}),(0,r.jsxs)("div",{className:"font-mono text-sm",children:["#",a]})]}),(0,r.jsx)("div",{className:"mt-8",children:(0,r.jsx)(K.Z,{highlightedRarity:c.rarity})}),(0,r.jsx)(j,{item:c})]})]})]}):(0,r.jsx)(L,{itemID:a,accountID:s})})]})}},8848:function(t,e,n){"use strict";n.d(e,{Z:function(){return l}});var r=n(5893),o=n(5697),i=n.n(o),s=n(4358),a=n(3802);function l(t){var e=t.highlightedRarity;return(0,r.jsxs)("div",{className:"mb-10 text-gray-light text-sm","data-cy":"rarity-scale",children:[(0,r.jsxs)("div",{className:"flex justify-between items-center uppercase font-bold text-xs pb-2 px-2",children:[(0,r.jsx)("div",{children:"Rarity Scale"}),(0,r.jsx)("div",{children:"Minting Chance"})]}),Object.keys(s.nB).reverse().map((function(t){return(0,r.jsxs)("div",{className:"flex items-center border-t border-gray-200 py-1 px-2 ".concat(Number(e)===Number(t)?"bg-gray-200":""),children:[(0,r.jsx)("div",{className:"".concat((0,a.P)(t)," w-2.5 h-2.5 rounded-full mr-3")}),(0,r.jsx)("div",{className:"",children:s.nB[t]}),(0,r.jsxs)("div",{className:"ml-auto text-gray-darkest",children:[s.rR[t],"%"]})]},t)}))]})}l.propTypes={highlightedRarity:i().number}},1381:function(t,e,n){"use strict";n.d(e,{Z:function(){return a}});var r=n(5893),o=n(5697),i=n.n(o),s=n(4358);function a(t){var e=t.status;return(0,r.jsxs)("div",{className:"flex flex-col items-center justify-center bg-white pt-12 pb-11 border border-gray-200 rounded-sm text-gray-lightest text-xs uppercase","data-cy":"tx-loading",children:[(0,r.jsx)("img",{src:"/images/loading.svg",alt:"Flow",width:70,height:70}),(0,r.jsx)("div",{className:"mt-4",children:s.PS[e]||"Initializing"})]})}a.propTypes={status:i().number}}},function(t){t.O(0,[572,774,888,179],(function(){return e=5047,t(t.s=e);var e}));var e=t.O();_N_E=e}]);
//# sourceMappingURL=[id]-86913472c701f643.js.map