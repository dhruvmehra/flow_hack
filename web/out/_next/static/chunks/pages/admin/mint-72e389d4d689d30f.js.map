{"version":3,"file":"static/chunks/pages/admin/mint-72e389d4d689d30f.js","mappings":"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","sources":["webpack://_N_E/?a780","webpack://_N_E/./src/components/AdminNav.jsx","webpack://_N_E/./src/hooks/useMintAndList.js","webpack://_N_E/./src/hooks/useRequest.js","webpack://_N_E/./src/components/MinterLoader.jsx","webpack://_N_E/./src/components/Minter.jsx","webpack://_N_E/./pages/admin/mint.jsx","webpack://_N_E/./src/components/PageTitle.jsx","webpack://_N_E/./src/components/RarityScale.jsx","webpack://_N_E/./src/components/TransactionLoading.jsx","webpack://_N_E/./src/util/classes.js"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/mint\",\n      function () {\n        return require(\"private-next-pages/admin/mint.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin/mint\"])\n      });\n    }\n  ","import Link from \"next/link\"\nimport {paths} from \"src/global/constants\"\n\nexport default function AdminNav() {\n  return (\n    <div\n      className=\"flex justify-between items-center text-white text-sm bg-gray rounded-md\n    h-10 py-2 px-5 -mt-4 mb-12\"\n    >\n      <div className=\"uppercase\">Administrator View</div>\n      <Link href={paths.root} passHref>\n        <a className=\"flex items-center hover:opacity-80\">\n          <span className=\"mr-3\">Back to user view</span>\n          <img\n            src=\"/images/arrow-right-b.svg\"\n            alt=\"Flow\"\n            width={15}\n            height={15}\n          />\n        </a>\n      </Link>\n    </div>\n  )\n}\n","import * as fcl from \"@onflow/fcl\"\nimport {useRouter} from \"next/router\"\nimport {useEffect, useRef, useState} from \"react\"\nimport useTransactionsContext from \"src/components/Transactions/useTransactionsContext\"\nimport {paths} from \"src/global/constants\"\nimport publicConfig from \"src/global/publicConfig\"\nimport useRequest from \"src/hooks/useRequest\"\nimport {EVENT_ITEM_MINTED, getKittyItemsEventByType} from \"src/util/events\"\nimport {useSWRConfig} from \"swr\"\nimport analytics from \"src/global/analytics\"\n\n// Mints an item and lists it for sale. The item is minted on the service account.\nexport default function useMintAndList() {\n  const {addTransaction} = useTransactionsContext()\n  const [_mintState, executeMintRequest] = useRequest()\n  const txStateSubscribeRef = useRef()\n  const txSealedTimeout = useRef()\n\n  const router = useRouter()\n  const {mutate} = useSWRConfig()\n\n  const [isMintingLoading, setIsMintingLoading] = useState(false)\n  const [transactionStatus, setTransactionStatus] = useState(null)\n  const transactionAction = isMintingLoading ? \"Minting Item\" : \"Processing\"\n\n  const resetLoading = () => {\n    setIsMintingLoading(false)\n    setTransactionStatus(null)\n  }\n\n  const onTransactionSealed = tx => {\n    if (!!tx.errorMessage?.length) {\n      resetLoading()\n      return\n    }\n\n    const event = getKittyItemsEventByType(tx.events, EVENT_ITEM_MINTED)\n\n    if (!event?.data?.id) throw new Error(\"Minting error, missing itemID\")\n    if (!event?.data?.kind) throw new Error(\"Minting error, missing kind\")\n\n    // TODO: Poll api for listing presence before mutating the apiMarketItemsList\n    txSealedTimeout.current = setTimeout(() => {\n      mutate(paths.apiMarketItemsList())\n      router.push({\n        pathname: paths.profileItem(publicConfig.flowAddress, event.data.id),\n      })\n    }, 1000)\n  }\n\n  const mintAndList = () => {\n    setIsMintingLoading(true)\n    const recipient = publicConfig.flowAddress\n\n    executeMintRequest({\n      url: publicConfig.apiKittyItemMintAndList,\n      method: \"POST\",\n      data: {\n        recipient,\n      },\n      onSuccess: data => {\n        setIsMintingLoading(true)\n\n        const transactionId = data?.transaction\n        if (!transactionId) throw new Error(\"Missing transactionId\")\n        addTransaction({id: transactionId, title: \"Minting new item\"})\n\n        txStateSubscribeRef.current = fcl.tx(transactionId).subscribe(tx => {\n          setTransactionStatus(tx.status)\n          if (fcl.tx.isSealed(tx)) onTransactionSealed(tx)\n        })\n\n        analytics.track(\"kitty-items-item-minted\", {params: {mint: data}})\n      },\n      onError: () => {\n        resetLoading()\n      },\n    })\n  }\n\n  useEffect(() => {\n    return () => {\n      if (!!txStateSubscribeRef.current) txStateSubscribeRef.current()\n      clearTimeout(txSealedTimeout.current)\n    }\n  }, [])\n\n  const isLoading = isMintingLoading\n  return [{isLoading, transactionAction, transactionStatus}, mintAndList]\n}\n","import {useEffect, useReducer, useRef} from \"react\"\nimport {\n  ERROR,\n  initialState,\n  requestReducer,\n  SUCCESS,\n} from \"src/reducers/requestReducer\"\n\nexport default function useRequest() {\n  const [state, dispatch] = useReducer(requestReducer, initialState)\n  const abortControllerRef = useRef()\n\n  const executeRequest = ({url, method, data, onSuccess, onError}) => {\n    abortControllerRef.current?.abort()\n    abortControllerRef.current = new AbortController()\n\n    fetch(url, {\n      method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n      signal: abortControllerRef.current.signal,\n    })\n      .then(response => {\n        return response.json()\n      })\n      .then(data => {\n        abortControllerRef.current = undefined\n        dispatch({type: SUCCESS, payload: data})\n        if (typeof onSuccess === \"function\") onSuccess(data)\n      })\n      .catch(error => {\n        dispatch({type: ERROR})\n        if (typeof onError === \"function\") onError(error)\n      })\n  }\n\n  useEffect(() => {\n    return () => {\n      abortControllerRef.current?.abort()\n    }\n  }, [])\n\n  return [state, executeRequest]\n}\n","import PropTypes from \"prop-types\"\nimport {useCallback, useEffect, useRef, useState} from \"react\"\nimport {ITEM_KIND_MAP} from \"src/global/constants\"\nimport {itemGradientClass} from \"src/util/classes\"\nimport parameterize from \"src/util/parameterize\"\n\nconst ITEM_TYPE_COUNT = Object.keys(ITEM_KIND_MAP).length\n\nexport default function MinterLoader({isLoading}) {\n  return (\n    <>\n      {!isLoading && <MinterLoaderPlaceholderImage />}\n      <MinterLoaderRandomImages isLoading={isLoading} />\n    </>\n  )\n}\n\nMinterLoader.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n}\n\nfunction MinterLoaderRandomImages({isLoading}) {\n  const loadingIntervalRef = useRef()\n\n  const getRandId = () => Math.floor(Math.random() * ITEM_TYPE_COUNT)\n\n  const [loadingKind, setLoadingKind] = useState(1)\n\n  const updateLoadingImage = useCallback(() => {\n    setLoadingKind(prev => {\n      let newKind = getRandId()\n\n      while (newKind === prev) {\n        newKind = getRandId()\n      }\n\n      return newKind\n    })\n  }, [])\n\n  useEffect(() => {\n    if (isLoading) {\n      loadingIntervalRef.current = setInterval(updateLoadingImage, 350)\n    } else if (loadingIntervalRef.current) {\n      clearInterval(loadingIntervalRef.current)\n    }\n\n    return () => {\n      if (loadingIntervalRef.current) clearInterval(loadingIntervalRef.current)\n    }\n  }, [isLoading, updateLoadingImage])\n\n  const kinds = Array(ITEM_TYPE_COUNT)\n    .fill(0)\n    .map((_, index) => index)\n\n  return (\n    <>\n      {kinds.map((kind, index) => (\n        <MinterLoaderImage\n          key={index}\n          index={index}\n          kind={kind}\n          isHidden={!isLoading || kind !== loadingKind}\n        />\n      ))}\n    </>\n  )\n}\n\nMinterLoaderRandomImages.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n}\n\nfunction MinterLoaderPlaceholderImage() {\n  const imageSrc1X = \"/images/kitty-items/question-gray-lg.png\"\n  const imageSrc2X = \"/images/kitty-items/question-gray-lg@2x.png\"\n  const imageSrcSet = `${imageSrc1X}, ${imageSrc2X} 2x`\n\n  return (\n    <div\n      className={`group relative ${itemGradientClass(\n        \"gray\"\n      )} rounded-3xl relative flex w-full items-center justify-center`}\n    >\n      <img src={imageSrc1X} srcSet={imageSrcSet} alt=\"Mint a Kitty Item\" />\n    </div>\n  )\n}\n\nfunction getImageSrc(kind, is2X) {\n  const kindName = ITEM_KIND_MAP[kind]\n  return `/images/kitty-items/${parameterize(kindName)}-blue-lg${\n    is2X ? \"@2x\" : \"\"\n  }.png`\n}\n\ngetImageSrc.propTypes = {\n  kind: PropTypes.number.isRequired,\n  is2X: PropTypes.bool.isRequired,\n}\n\nfunction MinterLoaderImage({kind, isHidden}) {\n  const imageSrc1X = getImageSrc(kind, false)\n  const imageSrc2X = getImageSrc(kind, true)\n  const imageSrcSet = `${imageSrc1X}, ${imageSrc2X} 2x`\n\n  const classes = `group relative ${itemGradientClass(0)} ${\n    isHidden ? \"hidden\" : \"\"\n  } rounded-3xl relative flex w-full items-center justify-center`\n\n  return (\n    <div className={classes}>\n      <img src={imageSrc1X} srcSet={imageSrcSet} alt=\"Mint a Kitty Item\" />\n    </div>\n  )\n}\n\nMinterLoaderImage.propTypes = {\n  kind: PropTypes.number.isRequired,\n  isHidden: PropTypes.bool.isRequired,\n}\n","import Button from \"src/components/Button\"\nimport useMintAndList from \"src/hooks/useMintAndList\"\nimport MinterLoader from \"./MinterLoader\"\nimport RarityScale from \"./RarityScale\"\nimport TransactionLoading from \"./TransactionLoading\"\n\nexport default function Minter() {\n  const [{isLoading, transactionStatus}, mint] = useMintAndList()\n  const multiple_mint = () => {\n    mint\n  }\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2\">\n      <MinterLoader isLoading={isLoading} />\n\n      <div className=\"flex flex-col pr-4 mt-14 lg:mt-24 lg:pt-20 lg:pl-14\">\n        <h1 className=\"mb-10 text-5xl text-gray-darkest\" data-cy=\"header-mint\">\n          Mint a New Item\n        </h1>\n        <RarityScale />\n\n        {isLoading ? (\n          <TransactionLoading status={transactionStatus} />\n        ) : (\n          <Button onClick={mint} disabled={isLoading} roundedFull={true}>\n            Mint Item\n          </Button>\n        )}\n      </div>\n    </div>\n  )\n}\n","import AdminNav from \"src/components/AdminNav\"\nimport Minter from \"src/components/Minter\"\nimport PageTitle from \"src/components/PageTitle\"\nimport useAppContext from \"src/hooks/useAppContext\"\n\nexport default function Mint() {\n  const {isLoggedInAsAdmin, setShowAdminLoginDialog} = useAppContext()\n\n  const onAdminLoginClick = () => {\n    setShowAdminLoginDialog(true)\n  }\n\n  if (!isLoggedInAsAdmin) {\n    return (\n      <div className=\"flex items-center justify-center mt-14\">\n        <button onClick={onAdminLoginClick} data-cy=\"btn-log-in-admin\">\n          Log In to Admin View\n        </button>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <PageTitle>Mint</PageTitle>\n      <main>\n        <div className=\"main-container py-14\">\n          <AdminNav />\n          <Minter />\n        </div>\n      </main>\n    </div>\n  )\n}\n","import Head from \"next/head\"\nimport PropTypes from \"prop-types\"\nimport {BASE_HTML_TITLE} from \"src/global/constants\"\n\nexport default function PageTitle({children}) {\n  const title = [children, BASE_HTML_TITLE].filter(Boolean).join(\" - \")\n  return (\n    <Head>\n      <title>{title}</title>\n      <meta property=\"og:title\" content={title} key=\"title\" />\n    </Head>\n  )\n}\n\nPageTitle.propTypes = {\n  children: PropTypes.node,\n}\n","import PropTypes from \"prop-types\"\nimport {ITEM_RARITY_MAP, ITEM_RARITY_PROBABILITIES} from \"src/global/constants\"\nimport {itemGradientClass} from \"src/util/classes\"\n\nexport default function RarityScale({highlightedRarity}) {\n  return (\n    <div className=\"mb-10 text-gray-light text-sm\" data-cy=\"rarity-scale\">\n      <div className=\"flex justify-between items-center uppercase font-bold text-xs pb-2 px-2\">\n        <div>Rarity Scale</div>\n        <div>Minting Chance</div>\n      </div>\n      {Object.keys(ITEM_RARITY_MAP)\n        .reverse()\n        .map(key => (\n          <div\n            key={key}\n            className={`flex items-center border-t border-gray-200 py-1 px-2 ${\n              Number(highlightedRarity) === Number(key) ? \"bg-gray-200\" : \"\"\n            }`}\n          >\n            <div\n              className={`${itemGradientClass(\n                key\n              )} w-2.5 h-2.5 rounded-full mr-3`}\n            />\n            <div className=\"\">{ITEM_RARITY_MAP[key]}</div>\n            <div className=\"ml-auto text-gray-darkest\">\n              {ITEM_RARITY_PROBABILITIES[key]}%\n            </div>\n          </div>\n        ))}\n    </div>\n  )\n}\n\nRarityScale.propTypes = {\n  highlightedRarity: PropTypes.number,\n}\n","import PropTypes from \"prop-types\"\nimport {TRANSACTION_STATUS_MAP} from \"src/global/constants\"\n\nexport default function TransactionLoading({status}) {\n  return (\n    <div\n      className=\"flex flex-col items-center justify-center bg-white pt-12 pb-11 border border-gray-200 rounded-sm text-gray-lightest text-xs uppercase\"\n      data-cy=\"tx-loading\"\n    >\n      <img src=\"/images/loading.svg\" alt=\"Flow\" width={70} height={70} />\n      <div className=\"mt-4\">\n        {TRANSACTION_STATUS_MAP[status] || \"Initializing\"}\n      </div>\n    </div>\n  )\n}\n\nTransactionLoading.propTypes = {\n  status: PropTypes.number,\n}\n","// Use full class names to avoid auto-purging https://tailwindcss.com/docs/optimizing-for-production#writing-purgeable-html\nexport function itemGradientClass(rarity) {\n  switch (String(rarity)) {\n    case \"0\":\n      return \"item-gradient-0\"\n    case \"1\":\n      return \"item-gradient-1\"\n    case \"2\":\n      return \"item-gradient-2\"\n    case \"3\":\n      return \"item-gradient-3\"\n    case \"gray\":\n      return \"item-gradient-gray\"\n    default:\n      throw new Error()\n  }\n}\n\nexport function rarityTextColors(rarity) {\n  switch (String(rarity)) {\n    case \"0\":\n      return \"text-blue\"\n    case \"1\":\n      return \"text-green-dark\"\n    case \"2\":\n      return \"text-purple\"\n    case \"3\":\n      return \"text-gold\"\n    default:\n      throw new Error()\n  }\n}\n"],"names":["window","__NEXT_P","push","AdminNav","div","className","Link","href","paths","passHref","a","span","img","src","alt","width","height","useMintAndList","useTransactionsContext","addTransaction","useRequest","useReducer","requestReducer","initialState","state","dispatch","abortControllerRef","useRef","useEffect","current","abort","url","method","data","onSuccess","onError","AbortController","fetch","headers","body","JSON","stringify","signal","then","response","json","undefined","type","SUCCESS","payload","catch","error","ERROR","executeMintRequest","txStateSubscribeRef","txSealedTimeout","router","useRouter","useSWRConfig","mutate","useState","isMintingLoading","setIsMintingLoading","transactionStatus","setTransactionStatus","transactionAction","resetLoading","clearTimeout","isLoading","recipient","publicConfig","transactionId","transaction","Error","id","title","fcl","subscribe","tx","status","event","errorMessage","length","getKittyItemsEventByType","events","EVENT_ITEM_MINTED","kind","setTimeout","pathname","onTransactionSealed","analytics","params","mint","ITEM_TYPE_COUNT","Object","keys","ITEM_KIND_MAP","MinterLoader","MinterLoaderPlaceholderImage","MinterLoaderRandomImages","loadingIntervalRef","getRandId","Math","floor","random","loadingKind","setLoadingKind","updateLoadingImage","useCallback","prev","newKind","setInterval","clearInterval","kinds","Array","fill","map","_","index","MinterLoaderImage","isHidden","imageSrc1X","imageSrcSet","imageSrc2X","itemGradientClass","srcSet","getImageSrc","is2X","kindName","parameterize","classes","propTypes","PropTypes","Minter","h1","data-cy","RarityScale","TransactionLoading","Button","onClick","disabled","roundedFull","Mint","useAppContext","isLoggedInAsAdmin","setShowAdminLoginDialog","PageTitle","main","button","children","BASE_HTML_TITLE","filter","Boolean","join","Head","meta","property","content","highlightedRarity","ITEM_RARITY_MAP","reverse","key","Number","ITEM_RARITY_PROBABILITIES","TRANSACTION_STATUS_MAP","rarity","String","rarityTextColors"],"sourceRoot":""}